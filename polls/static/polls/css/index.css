.btn-flat-border {
    display: inline-block;
    padding: 0.3em 1em;
    text-decoration: none;
    color: #67c5ff;
    border: solid 2px #67c5ff;
    border-radius: 3px;
    transition: .4s;
}  
.btn-flat-border:hover {
    background: #67c5ff;
    color: white;
}
form input[type='submit'] {
    margin-left: 70px;
}

.cp_ipradio {
	width: 90%;
	margin: 10px auto;
	text-align: left;
}
.cp_ipradio input[type='radio'] {
	position: absolute;
	z-index: -1;
	opacity: 0;
}
.cp_ipradio label {
	position: relative;
	display: inline-block;
	margin: 10px;
	padding-right: 10px;
	padding-left: 35px;
	cursor: pointer;
}
.cp_ipradio label::before {
	position: absolute;
	z-index: -1;
	top: 0;
	left: 0;
	display: block;
	width: 24px;
	height: 24px;
	content: ' ';
	border: 2px solid #da3c41;
	border-radius: 4px;
}
.cp_ipradio input[type='radio'] + label::before {
	border-radius: 18px;
}
.cp_ipradio input[type='radio']:checked + label {
	padding-left: 10px;
	color: #ffffff;
}
.cp_ipradio input[type='radio']:checked + label::before {
	top: 0;
	width: 100%;
	height: 100%;
	background: #da3c41;
}
.cp_ipradio label, .cp_ipradio label::before {
	-webkit-transition: 0.25s all ease;
	        transition: 0.25s all ease;
}

.container {
    display: flex; /*フレックスコンテナを設定、インライン要素・ブロックレベル要素に関わらず配置を制御*/
    flex-direction: row; /*フレックスアイテムを水平方向に左から右へ配置*/
    flex-wrap: wrap; /*フレックスアイテムを折り返して表示*/
    justify-content: space-around; /*フレックスアイテムの前後に均等なスペースを追加*/
    border: solid 3px #000000;
    margin: 40px;
    padding: 20px 0;
    max-width: 1500px; /*最大幅を指定*/
}
.container a {
    padding: 10px;
}

h1 {
    color: #6cb4e4;
    text-align: center;
    padding: 0.25em;
    border-top: solid 2px #6cb4e4;
    border-bottom: solid 2px #6cb4e4;
    background: -webkit-repeating-linear-gradient(-45deg, #f0f8ff, #f0f8ff 3px,#e9f4ff 3px, #e9f4ff 7px);
    background: repeating-linear-gradient(-45deg, #f0f8ff, #f0f8ff 3px,#e9f4ff 3px, #e9f4ff 7px);
}

li {
    display: flex;
    align-items: center;
    width: 95%;
    height: 50px;
    background: #000;
    transition: all 1s 0s ease;
}
li:hover {
    background: white;
    width: 30%;
}
.container a:link, .container a:visited {
    color: white;
    padding-left: 20px;
    text-decoration: none;
}
.container li:hover a {
    color: green;
    font-weight: bold;
    font-size: 20px;
}

@media screen and (max-width: 767px) {
    body {
        background-color: pink;
    }
}

@media screen and (min-width: 768px) and (max-width: 1024px) {
    body {
        background-color: orange;
    }
    h1 {
        animation: ball 0.5s ease 0s infinite alternate;
    }
    @keyframes ball{
        0% {
            transform:translate(0%, 20px);
        }
        100% {
            transform:translate(0%, -10px);
        }
    }
}

@media screen and (min-width: 1025px) {
    body {
        background-color: yellowgreen;
    }
    li:hover {
        animation: rotation 2s ease 0s 1 alternate forwards;
    }
    @keyframes rotation {
        0% {
            transform: scale(1);
            background: #000;
        }
        10% {
            transform: scale(1.2);
            background: gold;
        }
        100% {
            transform: scale(1.5);
            background: white;
        }
    }
}
